Changes made to accomodate ggmicro

How to compile for ggmicro:
I use Linux.  I am not sure how it would work on Windows.  You will need to have the necessary tools installed to run make and configure.

Set up a toolchain for ggmicro using musl arm-linux-musleabi-cross found here:
https://musl.cc/

	I installed it to: /opt/musl/
	Executables are in: /opt/musl/arm-linux-musleabi-cross/bin/
	Libraries are in: /opt/musl/arm-linux-musleabi-cross/arm-linux-musleabi/lib/
	Header files are in: /opt/musl/arm-linux-musleabi-cross/arm-linux-musleabi/include/

	Add the cross-compiler bin directory to PATH:
	export PATH=$PATH:/opt/musl/arm-linux-musleabi-cross/bin/

	Make symlinks in that directory to the arm-linux-muslebi- version of gcc, g++ and ld, naming them arm-linux-:
	ln -s /opt/musl/arm-linux-musleabi-cross/bin/arm-linux-muslebi-gcc /opt/musl/arm-linux-musleabi-cross/bin/arm-linux-gcc
	ln -s /opt/musl/arm-linux-musleabi-cross/bin/arm-linux-muslebi-g++ /opt/musl/arm-linux-musleabi-cross/bin/arm-linux-g++
	ln -s /opt/musl/arm-linux-musleabi-cross/bin/arm-linux-muslebi-ld /opt/musl/arm-linux-musleabi-cross/bin/arm-linux-ld
	
	You may find as you compile that some libraries are missing.  Many can be found pre-compiled for arm-linux-musleabi here (appears to be down at the moment): pkg.musl.cc
	You may need to download the source for missing libraries and compile using this toolchain, then install the libraries in the lib directory and header files in the include directory mentioned above.


Compiling SDL-1.2.15 for ggmicro:
Change directory to where you cloned the SDL source.

Run configure (edit prefix to be the directory where you want to install the compiled library):
./configure     --build=x86_64-linux-gnu     --host=arm-linux     --target=arm-linux   --prefix=/data/sftpuser/upload/projects/SDL-1.2.15-ggmicro

Run Make:
make

Install:
make install

The compiled library will be contained in the lib directory in your install destination specified with prefix above.  A pre-compiled version of it is avaialble in this repository.  Volume control is integrated and requires amixer, which can be found compiled here: https://github.com/winteriscomingpinball/amixer-alsa-utils-0.9.0rc4



--------------------------------------------------------------

                         Simple DirectMedia Layer

                                  (SDL)

                                Version 1.2

---
http://www.libsdl.org/

This is the Simple DirectMedia Layer, a general API that provides low
level access to audio, keyboard, mouse, joystick, 3D hardware via OpenGL,
and 2D framebuffer across multiple platforms.

The current version supports Linux, Windows CE/95/98/ME/XP/Vista, BeOS,
MacOS Classic, Mac OS X, FreeBSD, NetBSD, OpenBSD, BSD/OS, Solaris, IRIX,
and QNX.  The code contains support for Dreamcast, Atari, AIX, OSF/Tru64,
RISC OS, SymbianOS, Nintendo DS, and OS/2, but these are not officially
supported.

SDL is written in C, but works with C++ natively, and has bindings to
several other languages, including Ada, C#, Eiffel, Erlang, Euphoria,
Guile, Haskell, Java, Lisp, Lua, ML, Objective C, Pascal, Perl, PHP,
Pike, Pliant, Python, Ruby, and Smalltalk.

This library is distributed under GNU LGPL version 2, which can be
found in the file  "COPYING".  This license allows you to use SDL
freely in commercial programs as long as you link with the dynamic
library.

The best way to learn how to use SDL is to check out the header files in
the "include" subdirectory and the programs in the "test" subdirectory.
The header files and test programs are well commented and always up to date.
More documentation is available in HTML format in "docs/index.html", and
a documentation wiki is available online at:
	http://www.libsdl.org/cgi/docwiki.cgi

The test programs in the "test" subdirectory are in the public domain.

Frequently asked questions are answered online:
	http://www.libsdl.org/faq.php

If you need help with the library, or just want to discuss SDL related
issues, you can join the developers mailing list:
	http://www.libsdl.org/mailing-list.php

Enjoy!
	Sam Lantinga				(slouken@libsdl.org)

